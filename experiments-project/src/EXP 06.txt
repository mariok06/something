#include <stdio.h>

int find(int parent[], int i) {
    while (parent[i] != i) i = parent[i];
    return i;
}

void uni(int parent[], int a, int b) {
    parent[find(parent, a)] = find(parent, b);
}

int main() {
    int n, e;
    printf("Enter vertices and edges: ");
    scanf("%d%d", &n, &e);

    int u[e], v[e], w[e], parent[n];
    printf("Enter edges (u v w):\n");
    for (int i = 0; i < e; i++) scanf("%d%d%d", &u[i], &v[i], &w[i]);
    for (int i = 0; i < n; i++) parent[i] = i;

    // Sort edges by weight
    for (int i = 0; i < e - 1; i++)
        for (int j = 0; j < e - i - 1; j++)
            if (w[j] > w[j + 1]) {
                int t = w[j]; w[j] = w[j + 1]; w[j + 1] = t;
                t = u[j]; u[j] = u[j + 1]; u[j + 1] = t;
                t = v[j]; v[j] = v[j + 1]; v[j + 1] = t;
            }

    int cost = 0;
    printf("\nEdges in MST:\n");
    for (int i = 0; i < e; i++)
        if (find(parent, u[i]) != find(parent, v[i])) {
            printf("%d - %d : %d\n", u[i], v[i], w[i]);
            cost += w[i];
            uni(parent, u[i], v[i]);
        }

    printf("Minimum Cost = %d\n", cost);
    return 0;
}

#Input
Enter vertices and edges: 4 5
Enter edges (u v w):
0 1 10
0 2 6
0 3 5
1 3 15
2 3 4
